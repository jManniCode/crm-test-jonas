name: CI Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Run unit tests
        run: dotnet test --no-build --verbosity normal

  api-test:
    runs-on: ubuntu-latest
    needs: unit-tests
    env:
      PG_HOST: ${{ secrets.PG_HOST }}
      PG_PORT: ${{ secrets.PG_PORT }}
      PG_USER: ${{ secrets.PG_USER }}
      PG_PASSWORD: ${{ secrets.PG_PASSWORD }}
      PG_DATABASE: ${{ secrets.PG_DATABASE }}
      EMAIL__PASSWORD: ${{ secrets.EMAIL__PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Run server in background
        run: |
          dotnet run --project server/ &
          sleep 10

      - name: Install Node.js (for Newman)
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Newman
        run: npm install -g newman

      - name: Run Postman API tests
        run: |
          newman run server/tests/crm-test.postman_collection.json \
            --environment server/tests/crm-test.postman_environment.json \
            --insecure \
            --reporters cli

  gui-tests: 
    runs-on: ubuntu-latest
    needs: api-test

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore server dependencies
        run: cd server && dotnet restore

      - name: Build/Restore Playwright GUI test project
        run: cd ServerGuiTests && dotnet build

      - name: Ensure Playwright browsers are installed
        run: cd ServerGuiTests && pwsh bin/Debug/net8.0/playwright.ps1 install --with-deps

      - name: Start backend server
        run: cd server && nohup dotnet run &

      - name: Run GUI tests
        run: cd ServerGuiTests && dotnet test

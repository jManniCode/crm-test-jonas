{
	"info": {
		"_postman_id": "6cf9427d-1d4d-4504-bfff-e0c9c44a0321",
		"name": "crm-test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43554531",
		"_collection_link": "https://jonas-5779856.postman.co/workspace/crm-test~20ebf487-c43a-41f3-bdcc-7092db4925ca/collection/43554531-6cf9427d-1d4d-4504-bfff-e0c9c44a0321?action=share&source=collection_link&creator=43554531"
	},
	"item": [
		{
			"name": "SuperAdminTests",
			"item": [
				{
					"name": "LoginSuperAdmin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should return 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Responsen innehåller rätt roll\", function () {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.include(\"super-admin\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\" : \"super_gris@mail.com\",\r\n    \"password\" : \"kung\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/api/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateAdmin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let jsonAdmin = pm.response.json(); \r",
									"\r",
									"pm.environment.set(\"lastCreatedAdminId\", jsonAdmin.id);\r",
									"\r",
									"pm.test(\"Should return 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Responsen innehåller ett ID\", function () {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json.id).to.not.be.undefined;\r",
									"    pm.expect(json.id).to.be.a(\"number\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Anna Admin\",\r\n  \"email\": \"anna.admin@example.com\",\r\n  \"company\": 2,\r\n  \"role\": \"Admin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/api/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "CreateCompany",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should return 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"    const json = pm.response.json();\r",
									"    pm.environment.set(\"lastCreatedCompanyId\", json.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Testbolag AB\",\r\n  \"email\": \"kontakt@testbolag.se\",\r\n  \"phone\": \"0123456789\",\r\n  \"description\": \"Ett testbolag för API-testning\",\r\n  \"domain\": \"www.testbolag.se\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/api/companies",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"companies"
							]
						}
					},
					"response": []
				},
				{
					"name": "SeeCompany",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Företagets namn är korrekt\", function () {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json.name).to.eql(\"Testbolag AB\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/api/companies/{{lastCreatedCompanyId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"companies",
								"{{lastCreatedCompanyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "EditCompany",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Företagsbeskrivningen har uppdaterats\", function () {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(pm.response.text()).to.include(\"uppdaterades\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"name\": \"Uppdaterat Företag AB\",\r\n  \"email\": \"nykontakt@foretag.se\",\r\n  \"phone\": \"0101234567\",\r\n  \"description\": \"Detta är ett uppdaterat företag.\",\r\n  \"domain\": \"https://uppdateratforetag.se\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/api/companies/{{lastCreatedCompanyId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"companies",
								"{{lastCreatedCompanyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "SeeCompany Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Företagets namn är korrekt\", function () {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json.name).to.eql(\"Uppdaterat Företag AB\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/api/companies/{{lastCreatedCompanyId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"companies",
								"{{lastCreatedCompanyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteCompany",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Företagsbeskrivningen har uppdaterats\", function () {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(pm.response.text()).to.include(\"raderades\");\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/api/companies/{{lastCreatedCompanyId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"companies",
								"{{lastCreatedCompanyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteAdmin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should return 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/users/{{lastCreatedAdminId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"users",
								"{{lastCreatedAdminId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "LogoutSuperAdmin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should return 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/api/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Admintests",
			"item": [
				{
					"name": "LoginAdmin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should return 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\" : \"grune@grymt.se\",\r\n    \"password\" : \"hejhej\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/api/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddServiceAgent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should return 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"let jsonAgent = pm.response.json();\r",
									"\r",
									"pm.environment.set(\"lastCreatedAgentId\", jsonAgent.id);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\" : \"Jonas Manni\",\r\n    \"email\" : \"jonas_manni@hotmail.com\",\r\n    \"selectedCategories\" : [1],\r\n    \"role\" : \"Service_agent\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/api/users/agent",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"users",
								"agent"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddProduct",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should return 200 OK\", function () {\r",
									"    pm.response.to.have.status(200)\r",
									"});\r",
									"\r",
									"const json = pm.response.json();\r",
									"pm.environment.set(\"lastCreatedProduct\", json.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"Name\": \"Testprodukt\",\r\n    \"Description\" : \"beskrivning\",\r\n    \"Price\" : 200,\r\n    \"Category\" : \"Service\",\r\n    \"Company\" : 3\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/api/products",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "EditProduct",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should return 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{lastCreatedProduct}},\r\n  \"name\": \"Testprodukt\",\r\n  \"description\": \"Ny beskrivning\",\r\n  \"price\": 299,\r\n  \"category\": \"Service\",\r\n  \"company\": 3\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/api/products",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "CheckUpdatedProduct",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should return 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const json = pm.response.json();\r",
									"\r",
									"\r",
									"pm.test(\"Should have updated price\", function () {\r",
									"    pm.expect(json.price).to.eql(299);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/api/products/{{lastCreatedProduct}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"products",
								"{{lastCreatedProduct}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteProduct",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statuskoden är 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Rätt meddelande returneras\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"Produkten togs bort\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/api/products/{{lastCreatedProduct}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"products",
								"{{lastCreatedProduct}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DeleteServiceAgent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should return 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/users/{{lastCreatedAgentId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"users",
								"{{lastCreatedAgentId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "LogoutAdmin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should return 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/api/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ServiceAgentTests",
			"item": [
				{
					"name": "LoginServiceAgent",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Statuskoden är 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Responsen innehåller rätt roll\", function () {\r",
									"    const json = pm.response.json();\r",
									"    pm.expect(json).to.include(\"customer-service\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"tryne@hotmail.com\",\r\n  \"password\": \"asd123\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/api/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetAssignedTickets",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Hämtar tilldelade tickets\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    const tickets = pm.response.json();\r",
									"    pm.expect(tickets).to.be.an(\"array\");\r",
									"});\r",
									"\r",
									"pm.test(\"Statuskoden är 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/api/tickets/assigned",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"tickets",
								"assigned"
							]
						}
					},
					"response": []
				},
				{
					"name": "AddMessage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Should return 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response text should confirm addition\", function () {\r",
									"    pm.expect(pm.response.text()).to.include(\"La till meddelandet\");\r",
									"});\r",
									"\r",
									"const json = pm.response.json();\r",
									"pm.environment.set(\"lastCreatedMessageId\", json.id);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"slug\": \"sprinkler-coverage-019\",\r\n  \"text\": \"Vi jobbar på att lösa detta så snart som möjligt!\",\r\n  \"customer\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:5000/api/messages/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"messages",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	]
}
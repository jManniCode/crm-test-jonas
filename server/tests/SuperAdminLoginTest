using Microsoft.Playwright;
using Microsoft.VisualStudio.TestTools.UnitTesting;
using System;
using System.Threading.Tasks;

namespace Server.Tests;

[TestClass]
public class SuperAdminLoginTest
{
    private IPlaywright _playwright;
    private IBrowser _browser;
    private IBrowserContext _context;
    private IPage _page;

    [TestInitialize]
    public async Task Setup()
    {
        _playwright = await Playwright.CreateAsync();
        _browser = await _playwright.Chromium.LaunchAsync(new BrowserTypeLaunchOptions
        {
            Headless = false,  // sätt till true om du vill köra headless i CI
            SlowMo = 250       // valfritt: saktar ner så man ser vad som händer
        });
        _context = await _browser.NewContextAsync();
        _page = await _context.NewPageAsync();
    }

    [TestCleanup]
    public async Task Cleanup()
    {
        await _page.CloseAsync();
        await _context.CloseAsync();
        await _browser.CloseAsync();
        _playwright.Dispose();
    }

    [TestMethod]
    public async Task SuperAdmin_CanLogin_AndLogout()
    {
        await _page.GotoAsync("http://localhost:5173/login");

        await _page.FillAsync("input[name=email]", "super_gris@mail.com");
        await _page.FillAsync("input[name=password]", "kung");
        await _page.ClickAsync("button[type=submit]");

        await _page.WaitForURLAsync("**/super-admin");

        Assert.IsTrue(_page.Url.Contains("/super-admin"));

        await _page.ClickAsync("button:has-text('Sign Out')");

        await _page.WaitForURLAsync("**/login");
        Assert.IsTrue(_page.Url.Contains("/login"));
    }
}
